pipeline:
    name: javaspringbootpipeline
    identifier: javaspringbootpipeline
    allowStageExecutions: false
    projectIdentifier: Demo_Project
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: org.gitconnector
                repoName: java
                build: <+input>
    stages:
        - stage:
              name: Build
              identifier: Build
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: org.AKSConnector
                          namespace: harnessdemo
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: building code
                                identifier: building_code
                                spec:
                                    connectorRef: Jfrog_harness_integration
                                    image: harnessdev.jfrog.io/default-docker-remote/maven:latest
                                    command: |-
                                        mvn --version
                                        mvn clean package
                          - parallel:
                                - step:
                                      type: BuildAndPushDockerRegistry
                                      name: building and pushing
                                      identifier: building_and_pushing
                                      spec:
                                          connectorRef: Jfrog_harness_integration
                                          repo: harnessdev.jfrog.io/docker-local/javasprongboot
                                          tags:
                                              - latest
                                          dockerfile: Dockerfile
                                          context: "."
                                - step:
                                      type: ArtifactoryUpload
                                      name: upload artifact
                                      identifier: upload_artifact
                                      spec:
                                          connectorRef: artifactory
                                          target: lib/
                                          sourcePath: /harness/target/*.jar
        - stage:
              name: deploy
              identifier: deploy
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: Dev
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                              artifacts:
                                  primary:
                                      spec:
                                          connectorRef: Jfrog_harness_integration
                                          imagePath: docker-local/javasprongboot
                                          tag: <+input>
                                      type: DockerRegistry
                  infrastructure:
                      environmentRef: dev
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: org.AKSConnector
                              namespace: javaspring
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
